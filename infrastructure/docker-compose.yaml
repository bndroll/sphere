version: "3"
services:
  minio:
    image: quay.io/minio/minio:latest
    container_name: infrastructure-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./data/minio:/data
    env_file: .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:?}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:?}
    networks:
      - common

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: infrastructure-zookeeper
    restart: unless-stopped
    env_file: .env
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT:?}
      - ZOOKEEPER_TICK_TIME=${ZOOKEEPER_TICK_TIME:?}
    networks:
      - common

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: infrastructure-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    depends_on: [zookeeper]
    env_file: .env
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID:?}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT:?}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:?}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS:?}
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:?}
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=${KAFKA_TRANSACTION_STATE_LOG_MIN_ISR:?}
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR:?}
      - KAFKA_CREATE_TOPICS=${KAFKA_CREATE_TOPICS:?}
    networks:
      - common

  postgres:
    image: "postgres:16-alpine"
    container_name: infrastructure-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file: ../notifications/.env
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME:?}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?}
      - POSTGRES_DB=${POSTGRES_DATABASE:?}
    networks:
      - common

  redis:
    image: "redis:7.2.1-alpine"
    container_name: infrastructure-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis/d–∞ta:/root/redis
      - ./data/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    env_file: ../notifications/.env
    networks:
      - common

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: infrastructure-clickhouse
    restart: unless-stopped
    volumes:
      - ./data/clickhouse:/var/lib/clickhouse
    ports:
      - "8123:8123"
    networks:
      - common

  gateway:
    build:
      context: ../gateway
      dockerfile: ./Dockerfile
    container_name: gateway
    restart: unless-stopped
    depends_on: [postgres, redis, broker, minio]
    ports:
      - "8080:8000"
    env_file: ../gateway/.env
    networks:
       - common
#  account:
#    build:
#      context: .
#      dockerfile: ./../account/Dockerfile
#    container_name: account
#    restart: unless-stopped
#    depends_on: [postgres, redis, broker, minio]
#    ports:
#      - "8010:8010"
#    env_file: ./../account/.env
#    networks:
#      - common

networks:
  common:
    driver: bridge
